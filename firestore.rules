rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    /**
     * @description This ruleset enforces public read access to events while restricting write access to authenticated users. Only the club president who created an event can modify or delete it.
     * @path /events/{eventId}
     * @allow (get, list): Any user can read event data.
     * @allow (create): An authenticated user (club president) can create an event if the clubPresidentId matches their UID.
     * @allow (update, delete): The club president who created the event can modify or delete it.
     * @deny (create): An unauthenticated user cannot create an event.
     * @deny (update, delete): A user who is not the original creator (clubPresidentId) cannot modify or delete the event.
     * @principle Allows public read access while restricting write access to authorized users only using clubPresidentId as the owner.
     */
    match /events/{eventId} {
      allow get, list: if true;
      allow create: if isSignedIn() && request.resource.data.clubPresidentId == request.auth.uid;
      allow update, delete: if isSignedIn() && isExistingOwner(resource.data.clubPresidentId);
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isExistingOwner(userId) {
      return isOwner(userId) && resource != null;
    }
  }
}