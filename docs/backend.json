{
  "entities": {
    "Event": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Event",
      "type": "object",
      "description": "Represents an event on the campus.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Event entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the event."
        },
        "description": {
          "type": "string",
          "description": "A detailed description of the event."
        },
        "date": {
          "type": "string",
          "description": "The date of the event.",
          "format": "date-time"
        },
        "location": {
          "type": "string",
          "description": "The location of the event."
        },
        "clubPresidentId": {
          "type": "string",
          "description": "Reference to ClubPresident. (Relationship: ClubPresident 1:N Event)"
        },
        "latitude": {
          "type": "number",
          "description": "The latitude of the event location."
        },
        "longitude": {
          "type": "number",
          "description": "The longitude of the event location."
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "date",
        "location",
        "clubPresidentId",
        "latitude",
        "longitude"
      ]
    },
    "ClubPresident": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ClubPresident",
      "type": "object",
      "description": "Represents a club president who can create events.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the ClubPresident entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the club president."
        },
        "email": {
          "type": "string",
          "description": "The email address of the club president.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "name",
        "email"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/events/{eventId}",
        "definition": {
          "entityName": "Event",
          "schema": {
            "$ref": "#/backend/entities/Event"
          },
          "description": "Stores all events. Publicly readable, but only authenticated users can create events. Events can only be updated or deleted by the user who created them.",
          "params": [
            {
              "name": "eventId",
              "description": "The unique identifier of the event."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed for simplicity and to allow public read access for all events, which is a requirement for the dashboard. Events are stored in a top-level `events` collection. While this collection is publicly readable, write operations (create, update, delete) are restricted. This ensures that any user can view events, but only authenticated users can manage their own events."
  }
}